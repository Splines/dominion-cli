# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: '**'
  pull_request:
    branches: '**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # disable shallow clones for better SonarQube analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # We already cache Maven packages by specifying 'cache: maven'
      # in the setup JDK step
      #
      # - name: Cache Maven packages
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.m2
      #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: ${{ runner.os }}-m2

      - name: Compile & Test (Maven)
        run: mvn verify --file pom.xml --batch-mode --strict-checksums --update-snapshots

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          directory: ./dominion-report/target/site/jacoco-aggregate/
          files: jacoco.xml
          flags: unittests
          name: dominion-codecov
          fail_ci_if_error: true
          verbose: true

      # https://docs.sonarqube.org/latest/analysis/github-integration/
      # https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-maven/
      - name: Code Quality with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # already run verify step above
        run: mvn --batch-mode org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Splines_dominion-cli

